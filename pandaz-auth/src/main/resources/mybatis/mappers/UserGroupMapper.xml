<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pandaz.auth.mapper.UserGroupMapper">
    <resultMap id="BaseResultMap" type="com.pandaz.auth.entity.UserGroupEntity">
        <result column="id" jdbcType="VARCHAR" property="id"/>
        <result column="user_code" jdbcType="VARCHAR" property="userCode"/>
        <result column="group_code" jdbcType="VARCHAR" property="groupCode"/>
        <result column="created_by" jdbcType="VARCHAR" property="createdBy"/>
        <result column="created_date" jdbcType="TIMESTAMP" property="createdDate"/>
        <result column="updated_by" jdbcType="VARCHAR" property="updatedBy"/>
        <result column="updated_date" jdbcType="TIMESTAMP" property="updatedDate"/>
        <result column="deleted_by" jdbcType="VARCHAR" property="deletedBy"/>
        <result column="deleted_date" jdbcType="TIMESTAMP" property="deletedDate"/>
        <result column="deleted_flag" jdbcType="TINYINT" property="deletedFlag"/>
        <result column="is_private" jdbcType="TINYINT" property="isPrivate"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_code, group_code,
        created_by, created_date, is_private
    </sql>
    <insert id="insertSelective" parameterType="com.pandaz.auth.entity.UserGroupEntity">
        insert into t_sys_user_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null and id != ''">
                id,
            </if>
            <if test="userCode != null and userCode != ''">
                user_code,
            </if>
            <if test="groupCode != null and groupCode != ''">
                group_code,
            </if>
            <if test="createdBy != null and createdBy !=''">
                created_by,
            </if>
            <if test="createdDate != null">
                created_date,
            </if>
            <if test="updatedBy != null and updatedBy !=''">
                updated_by,
            </if>
            <if test="updatedDate != null">
                updated_date,
            </if>
            <if test="deletedBy != null and deletedBy !=''">
                deleted_by,
            </if>
            <if test="deletedDate != null">
                deleted_date,
            </if>
            <if test="deletedFlag != null">
                deleted_flag,
            </if>
            <if test="isPrivate != null">
                is_private,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null and id != ''">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="userCode != null and userCode != ''">
                #{userCode,jdbcType=VARCHAR},
            </if>
            <if test="groupCode != null and groupCode != ''">
                #{groupCode,jdbcType=VARCHAR},
            </if>
            <if test="createdBy != null and createdBy !=''">
                #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="createdDate != null">
                #{createdDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedBy != null and updatedBy !=''">
                #{updatedBy,jdbcType=VARCHAR},
            </if>
            <if test="updatedDate != null">
                #{updatedDate,jdbcType=TIMESTAMP},
            </if>
            <if test="deletedBy != null and deletedBy !=''">
                #{deletedBy,jdbcType=VARCHAR},
            </if>
            <if test="deletedDate != null">
                #{deletedDate,jdbcType=TIMESTAMP},
            </if>
            <if test="deletedFlag != null">
                #{deletedFlag,jdbcType=VARCHAR},
            </if>
            <if test="isPrivate != null">
                #{isPrivate,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <!-- 批量逻辑删除 -->
    <update id="batchLogicDelete" parameterType="java.util.HashMap">
        update t_sys_user_group
        <set>
            <if test="deletedBy != null">
                deleted_by = #{deletedBy,jdbcType=VARCHAR},
            </if>
            <if test="deletedDate != null">
                deleted_date = #{deletedDate,jdbcType=TIMESTAMP},
            </if>
            deleted_flag = id
        </set>
        <where>
            deleted_flag='0'
            <choose>
                <when test="list != null and list.size() > 0">
                    <if test="groupCode != null and groupCode != ''">
                        and group_code = #{groupCode,jdbcType=VARCHAR}
                        and user_code in
                        <foreach collection="list" open="(" close=")" index="index" item="item" separator=",">
                            #{item,jdbcType=VARCHAR}
                        </foreach>
                    </if>
                    <if test="userCode != null and userCode != ''">
                        and user_code = #{userCode,jdbcType=VARCHAR}
                        and group_code in
                        <foreach collection="list" open="(" close=")" index="index" item="item" separator=",">
                            #{item,jdbcType=VARCHAR}
                        </foreach>
                    </if>
                    <if test="groupCode == null and userCode == null">
                        and 1 = 2
                    </if>
                </when>
                <otherwise>
                    and 1 = 2
                </otherwise>
            </choose>
        </where>
    </update>
    <!-- 根据用户编码逻辑删除 -->
    <update id="logicDeleteByUserCode">
        update t_sys_user_group
        <set>
            <if test="deletedBy != null">
                deleted_by = #{deletedBy,jdbcType=VARCHAR},
            </if>
            <if test="deletedDate != null">
                deleted_date = #{deletedDate,jdbcType=TIMESTAMP},
            </if>
            deleted_flag = id
        </set>
        <where>
            deleted_flag='0'
            <choose>
                <when test="userCode != null and userCode != ''">
                    and user_code = #{userCode,jdbcType=VARCHAR}
                </when>
                <otherwise>
                    and 1 = 2
                </otherwise>
            </choose>
        </where>
    </update>
    <!-- 根据用户组编码逻辑删除 -->
    <update id="logicDeleteByGroupCode">
        update t_sys_user_group
        <set>
            <if test="deletedBy != null">
                deleted_by = #{deletedBy,jdbcType=VARCHAR},
            </if>
            <if test="deletedDate != null">
                deleted_date = #{deletedDate,jdbcType=TIMESTAMP},
            </if>
            deleted_flag = id
        </set>
        <where>
            deleted_flag='0'
            <choose>
                <when test="groupCode != null and groupCode != ''">
                    and group_code = #{groupCode,jdbcType=VARCHAR}
                </when>
                <otherwise>
                    and 1 = 2
                </otherwise>
            </choose>
        </where>
    </update>
    <!-- 列出组内成员 -->
    <select id="listBindGroupMembers" parameterType="com.pandaz.auth.entity.UserGroupEntity"
            resultType="java.lang.String">
        select user_code
        from t_sys_user_group
        <where>
            deleted_flag='0' and is_private='0'
            and group_code = #{groupCode,jdbcType=VARCHAR}
        </where>
    </select>
    <!-- 列出用户所有的组 -->
    <select id="listBindUserGroups" parameterType="com.pandaz.auth.entity.UserGroupEntity"
            resultType="java.lang.String">
        select group_code
        from t_sys_user_group
        <where>
            deleted_flag='0' and is_private='0'
            and user_code = #{userCode,jdbcType=VARCHAR}
        </where>
    </select>
    <!-- 批量插入 -->
    <insert id="batchInsert" parameterType="com.pandaz.auth.entity.UserGroupEntity">
        insert into t_sys_user_group
        (id, user_code, group_code, created_by, created_date)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.id,jdbcType=VARCHAR},
            #{item.userCode,jdbcType=VARCHAR},
            #{item.groupCode,jdbcType=VARCHAR},
            #{item.createdBy,jdbcType=VARCHAR},
            #{item.createdDate,jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>
</mapper>